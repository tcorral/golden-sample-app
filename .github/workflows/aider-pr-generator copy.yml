# name: Aider Auto Code Update

# on:
#   issues:
#     types: [opened, labeled]

# jobs:
#   process-issue:
#     runs-on: ubuntu-latest
#     if: contains(join(github.event.issue.labels.*.name, ','), 'aider')
#     steps:
#     - name: Checkout repository
#       uses: actions/checkout@v4
#       with:
#         fetch-depth: 0

#     - name: Set up Python
#       uses: actions/setup-python@v5
#       with:
#         python-version: '3.11'

#     - name: Install system dependencies
#       run: sudo apt-get install -y build-essential python3-dev

#     - name: Install Python build dependencies
#       run: |
#         python -m pip install --upgrade pip setuptools wheel

#     - name: Install Aider
#       run: pip install aider-chat boto3

#     - name: Extract issue sections
#       id: extract-sections
#       run: |
#         # Extract components from issue body
#         BODY=$(echo "${{ github.event.issue.body }}" | sed 's/\\r//g')
#         DESCRIPTION=$(echo "$BODY" | awk '/## Description/{flag=1; next} /## Files to modify/{flag=0} flag')
#         FILES=$(echo "$BODY" | awk '/## Files to modify/{flag=1; next} /## Acceptance criteria/{flag=0} flag' | sed -e 's/^* //' -e '/^$/d' -e 's/^ *//' | sort -u)
#         ACCEPTANCE=$(echo "$BODY" | awk '/## Acceptance criteria/{flag=1; next} /```|^$/{flag=0} flag')

#         # Process directories to find actual files
#         PROCESSED_FILES=""
#         if [ -n "$FILES" ]; then
#           while IFS= read -r path; do
#             if [ -d "$path" ]; then
#               PROCESSED_FILES+=" $(find "$path" -type f -print0 | xargs -0)"
#             elif [ -f "$path" ]; then
#               PROCESSED_FILES+=" $path"
#             fi
#           done <<< "$FILES"
#         else
#           PROCESSED_FILES=$(git ls-files | tr '\n' ' ')
#         fi

#         # Format final files list
#         FILES=$(echo "$PROCESSED_FILES" | tr ' ' '\n' | sort -u | tr '\n' ' ' | sed 's/ $//')
        
#         # Create prompt
#         PROMPT="Issue Title: ${{ github.event.issue.title }}\n\nDescription:\n$DESCRIPTION\n\nAcceptance Criteria:\n$ACCEPTANCE"
#         echo -e "$PROMPT" > prompt.txt
#         echo "$FILES" > files.txt

#     - name: Run Aider
#       env:
#         ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
#       run: |
#         FILES=$(cat files.txt)
#         echo "Processing files:"
#         echo "$FILES"
#         cat prompt.txt | aider --yes --model anthropic/claude-3-7-sonnet-latest $FILES

#     - name: Check for changes
#       id: changes
#       run: |
#         git add .
#         if ! git diff --cached --quiet; then
#           echo "has_changes=true" >> $GITHUB_OUTPUT
#         else
#           echo "has_changes=false" >> $GITHUB_OUTPUT
#         fi

#     - name: Create branch and commit
#       if: steps.changes.outputs.has_changes == 'true'
#       run: |
#         git config --global user.name "github-actions"
#         git config --global user.email "actions@github.com"
#         BRANCH_NAME="aider-locale-fix-${{ github.event.issue.number }}"
#         git checkout -b $BRANCH_NAME
#         git commit -m "Fix locale selector behavior (issue #${{ github.event.issue.number }})"

#     - name: Push changes
#       if: steps.changes.outputs.has_changes == 'true'
#       uses: ad-m/github-push-action@master
#       with:
#         github_token: ${{ secrets.GITHUB_TOKEN }}
#         branch: $BRANCH_NAME

#     - name: Create Pull Request
#       if: steps.changes.outputs.has_changes == 'true'
#       uses: peter-evans/create-pull-request@v5
#       with:
#         token: ${{ secrets.GITHUB_TOKEN }}
#         title: "fix: Update locale selector functionality"
#         body: "Automated fixes for issue #${{ github.event.issue.number }}\n\n${{ steps.extract-sections.outputs.description }}"
#         branch: $BRANCH_NAME
#         base: main