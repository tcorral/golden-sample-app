name: Aider Auto Code Update

on:
  issues:
    types: [opened, labeled]

jobs:
  process-issue:
    runs-on: ubuntu-latest
    if: contains(join(github.event.issue.labels.*.name, ','), 'aider')
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'  # Use supported Python version

    - name: Install system dependencies
      run: sudo apt-get install -y build-essential python3-dev

    - name: Install Python build dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel

    - name: Install Aider
      run: pip install aider-chat

    - name: Extract issue sections
      id: extract-sections
      run: |
        BODY=$(echo "${{ github.event.issue.body }}" | sed 's/\\r//g')
        DESCRIPTION=$(echo "$BODY" | awk '/## Description/{flag=1; next} /## |^$/{flag=0} flag')
        FILES=$(echo "$BODY" | awk '/## Files to modify/{flag=1; next} /## |^$/{flag=0} flag' | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//' | tr -d '\r')
        ACCEPTANCE=$(echo "$BODY" | awk '/## Acceptance criteria/{flag=1; next} /## |^$/{flag=0} flag')

        # Process files/directories
        PROCESSED_FILES=""
        if [ -n "$FILES" ]; then
          while IFS= read -r line; do
            for item in $line; do
              if [ -d "$item" ]; then
                PROCESSED_FILES+=" $(find "$item" -type f -print0 | xargs -0)"
              elif [ -f "$item" ]; then
                PROCESSED_FILES+=" $item"
              fi
            done
          done <<< "$FILES"
        else
          # Get all files in repo (excluding directories)
          PROCESSED_FILES=$(git ls-files -z | xargs -0 -I{} sh -c '[ -f "{}" ] && echo "{}"' | tr '\n' ' ')
        fi

        # Remove duplicates and format
        FILES=$(echo "$PROCESSED_FILES" | tr ' ' '\n' | sort -u | tr '\n' ' ' | sed 's/ $//')
        
        PROMPT="Issue Title: ${{ github.event.issue.title }}\n\nDescription:\n$DESCRIPTION\n\nAcceptance Criteria:\n$ACCEPTANCE"
        echo -e "$PROMPT" > prompt.txt
        echo "$FILES" > files.txt

    - name: Run Aider
      env:
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      run: |
        FILES=$(cat files.txt)
        echo "Processing files: $FILES"
        # Use xargs to handle spaces in filenames properly
        echo "$FILES" | xargs -n 1 | aider --yes --model claude-3-opus $(cat prompt.txt)

    - name: Check for changes
      id: changes
      run: |
        git add .
        if ! git diff --cached --quiet; then
          echo "has_changes=true" >> $GITHUB_OUTPUT
        else
          echo "has_changes=false" >> $GITHUB_OUTPUT
        fi

    - name: Create branch and commit
      if: steps.changes.outputs.has_changes == 'true'
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "actions@github.com"
        BRANCH_NAME="aider-${{ github.event.issue.number }}"
        git checkout -b $BRANCH_NAME
        git commit -m "Apply changes from Aider for issue #${{ github.event.issue.number }}"

    - name: Push changes
      if: steps.changes.outputs.has_changes == 'true'
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: $BRANCH_NAME

    - name: Create Pull Request
      if: steps.changes.outputs.has_changes == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        title: "Aider changes for issue #${{ github.event.issue.number }}"
        body: "Automated changes by Aider in response to issue #${{ github.event.issue.number }}"
        branch: $BRANCH_NAME
        base: main