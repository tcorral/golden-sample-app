name: Aider Auto Code Update

on:
  issues:
    types: [opened, labeled]

permissions:
  contents: write
  pull-requests: write
  issues: read

jobs:
  process-issue:
    runs-on: ubuntu-latest
    if: contains(join(github.event.issue.labels.*.name, ','), 'aider')
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install system dependencies
      run: sudo apt-get install -y build-essential python3-dev

    - name: Install Python build dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel

    - name: Install Aider
      run: pip install aider-chat boto3

    - name: Create working branch
      run: |
        BRANCH_NAME="aider-fix-${{ github.event.issue.number }}"
        echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
        git checkout -b $BRANCH_NAME

    - name: Extract issue sections
      id: extract-sections
      run: |
        # Clean markdown formatting and extract files
        BODY=$(echo "${{ github.event.issue.body }}" | sed 's/\\r//g; s/\*\*//g; s/^[#*-] *//')
        FILES=$(echo "$BODY" | awk '/Files to modify/{flag=1; next} /Acceptance criteria/{flag=0} flag' | 
                xargs -n1 | while read -r path; do
                  [ -d "$path" ] && find "$path" -type f || echo "$path"
                done | sort -u | tr '\n' ' ')
        
        # Create prompt with Angular-specific instructions
        PROMPT="Problem: $(echo "$BODY" | awk '/Description/{flag=1; next} /Files to modify/{flag=0} flag' | tr '\n' ' ')
        Requirements: $(echo "$BODY" | awk '/Acceptance criteria/{flag=1; next} /```|^$/{flag=0} flag' | tr '\n' ' ')
        Implementation Notes: Use Angular services for cookie handling, update component state, ensure template bindings"
        
        echo "$FILES" > files.txt
        echo "$PROMPT" > prompt.txt

    - name: Run Aider with debugging
      env:
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      run: |
        echo "=== Validated Files ==="
        cat files.txt
        echo "=== Final Prompt ==="
        cat prompt.txt
        echo "=== Current Branch ==="
        git branch
        
        # Run Aider and capture output
        aider --yes --model claude-3-opus $(cat files.txt) <<< "$(cat prompt.txt)" 2>&1 | tee aider.log
        
        echo "=== Aider Output ==="
        cat aider.log
        echo "=== Git Status ==="
        git status --porcelain
        echo "=== Recent Commits ==="
        git log --oneline -n 3

    - name: Push changes
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add -A
        git commit -m "Apply Aider fixes for #${{ github.event.issue.number }}" || echo "No changes to commit"
        git push origin ${{ env.BRANCH_NAME }} --force-with-lease

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        title: "fix: ${{ github.event.issue.title }}"
        body: |
          **Automated Fixes**
          - Addresses issue #${{ github.event.issue.number }}
          - Modified files:
            $(cat files.txt | tr ' ' '\n' | sed 's/^/- /')
        branch: ${{ env.BRANCH_NAME }}
        base: main
        delete-branch: false