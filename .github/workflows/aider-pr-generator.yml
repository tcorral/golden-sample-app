name: Aider Auto Code Update

on:
  issues:
    types: [opened, labeled]

jobs:
  process-issue:
    runs-on: ubuntu-latest
    if: contains(join(github.event.issue.labels.*.name, ','), 'aider')
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install system dependencies
      run: sudo apt-get install -y build-essential python3-dev

    - name: Install Python build dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel

    - name: Install Aider
      run: pip install aider-chat boto3

    - name: Extract issue sections
      id: extract-sections
      run: |
        # Extract and clean markdown content
        BODY=$(echo "${{ github.event.issue.body }}" | sed 's/\\r//g; s/\*\*//g; s/^[#* -]*//')
        
        # Extract components using awk with markdown-aware parsing
        DESCRIPTION=$(echo "$BODY" | awk '/Description/{flag=1; next} /Files to modify|Acceptance criteria/{flag=0} flag')
        FILES=$(echo "$BODY" | awk '/Files to modify/{flag=1; next} /Acceptance criteria/{flag=0} flag' | 
                sed -e 's/^ *//' -e '/^$/d' | xargs -n 1 sh -c '[ -f "$0" ] && echo "$0"')
        ACCEPTANCE=$(echo "$BODY" | awk '/Acceptance criteria/{flag=1; next} /```|^$/{flag=0} flag' | 
                    tr '\n' ' ' | sed 's/  \+/ /g')

        # Create single-line prompt with context preservation
        PROMPT=$(printf "######## PROBLEM STATEMENT ########\n%s\n\n######## TECHNICAL REQUIREMENTS ########\n%s\n\n######## FILES TO MODIFY ########\n%s\n\n######## IMPLEMENTATION NOTES ########\n- Fix all issues in ONE commit\n- Maintain Angular coding standards\n- Add necessary TypeScript interfaces\n- Update related test files" \
                "$DESCRIPTION" "$ACCEPTANCE" "$FILES")

        echo "$PROMPT" > prompt.txt
        echo "$FILES" > files.txt

    - name: Run Aider
      env:
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      run: |
        FILES=$(tr ' ' '\n' < files.txt | xargs -I{} sh -c '[ -f "{}" ] && echo "{}"' | tr '\n' ' ')
        echo "Validated files: $FILES"
        echo "Final prompt content:"
        cat prompt.txt
        aider --yes --model anthropic/claude-3-7-sonnet-latest $FILES <<< $(cat prompt.txt)

    - name: Check for changes
      id: changes
      run: |
        git add .
        if ! git diff --cached --quiet; then
          echo "has_changes=true" >> $GITHUB_OUTPUT
        else
          echo "has_changes=false" >> $GITHUB_OUTPUT
        fi

    - name: Create branch and commit
      if: steps.changes.outputs.has_changes == 'true'
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "actions@github.com"
        BRANCH_NAME="aider-fix-${{ github.event.issue.number }}"
        echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
        git checkout -b $BRANCH_NAME
        git commit -m "Fix: ${{ github.event.issue.title }} (issue #${{ github.event.issue.number }})"

    - name: Push changes
      if: steps.changes.outputs.has_changes == 'true'
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ env.BRANCH_NAME }}
        force: true  # Add force push capability
      
    - name: Create Pull Request
      if: steps.changes.outputs.has_changes == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        title: "fix: Update locale selector functionality"
        body: "Automated fixes for issue #${{ github.event.issue.number }}\n\n${{ steps.extract-sections.outputs.description }}"
        branch: $BRANCH_NAME
        base: main